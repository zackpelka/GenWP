#!/bin/bash
##Change Log
########################################################
# 1.4
# 	Added new NA1PPGDBL1397v server as a DB server option
#
# 1.3
#	Removed install of WPTouch
#	Removed install of Limit Admin Login
#	Added Clef Plugin Install
#	Added BruteProtect Pligin Install
#	Added Deletion of Akismet
#	Added Deletion of old 2012 and 2013 themes
#	Updated plugin install versions and locations
#	Made code easier to read
########################################################

# Define variables
# Development database server IP
devdbserver=10.10.5.169
# Production database server IP
proddbserver=10.10.5.198
# New Production database server IP
newproddbserver=10.10.18.59

clear
for i in {16..20} {20..16} ; do echo -en "\e[38;5;${i}m#####\e[0m" ; done ; echo
echo -e "   \e[22mAll in one multi-tenant hosting Vhost script"
echo "                 by Zachary Pelka              "
echo -e "                 \e[2mver2.0 22OCT2015              "
for i in {16..20} {20..16} ; do echo -en "\e[38;5;${i}m#####\e[0m" ; done ; echo
echo -e "\e[24m"
echo -e "\e[4mPlease input the name of the new website to create:"

read websiten

# Create Website folder structure for new website

# Creates a local group for FTP rights for the site
	groupadd $websiten
# Add inact to group so Interactive can FTP to the site
	usermod -a -G $websiten inact 
	usermod -a -G $websiten itact
	usermod -a -G $websiten pelkaz
	usermod -a -G $websiten yreddy
	
# Creates the folder structure for the site in a multi-tenant server
	mkdir /data/www/vhosts/$websiten
	mkdir /data/www/vhosts/$websiten/webroot
	mkdir /data/www/vhosts/$websiten/weblog
# Sets permissions and ownership(s) for folders 
	chmod 0775 /data/www/vhosts/$websiten
	chmod 0775 /data/www/vhosts/$websiten/webroot
	chown -R apache:$websiten /data/www/vhosts/$websiten
	setfacl -m g:apache:r-x /data/www/vhosts/$websiten
	chmod g+s /data/www/vhosts/$websiten/webroot
	chmod g+s /data/www/vhosts/$websiten

# Apache Vhost file creation script
# Determines IP address of machine to use in the HTTP Vhost file
	ip=`ifconfig eth0|grep inet|awk {'print $2'}|cut -d":" -f2`
# Creates the Vhost file based on IP and website name
	echo "<VirtualHost $ip>" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "DocumentRoot /data/www/vhosts/$websiten/webroot/" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "ServerName $websiten" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "ServerAlias $websiten" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "ServerAdmin InteractiveServices@us-resources.com" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "<Directory /data/www/vhosts/$websiten/webroot/>" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "   AllowOverride All" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "   Order allow,deny" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "   Allow from all" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "   Options FollowSymLinks" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "</Directory>" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "ErrorLog /data/www/vhosts/$websiten/weblog/error_log" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "CustomLog /data/www/vhosts/$websiten/weblog/access_log combined" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "" >> /etc/httpd/sites-enabled/$websiten.conf
	echo 'php_value upload_max_filesize "100M"' >> /etc/httpd/sites-enabled/$websiten.conf
	echo 'php_value post_max_size "100M"' >> /etc/httpd/sites-enabled/$websiten.conf
	echo "" >> /etc/httpd/sites-enabled/$websiten.conf
	echo "</VirtualHost>" >> /etc/httpd/sites-enabled/$websiten.conf
	clear
	echo "Conf File $websiten.conf has been created  "
	echo ""
#	echo ""
#	echo "Remember to add new or existing users to the $websiten group."
#	echo "Example: useradd -a -G $websiten -p PASSWORD"
#	echo "Be sure to change new user shells for FTP login: for /sbin/nologin"
#	echo ""
	echo "This is the current NSlookup on $websiten"
	nslookup $websiten
	echo ""
	echo "Here is your local machine, validate DNS:"
	# Pulls local IP address of machine 
	ifconfig eth0|grep inet|awk {'print $2'}|cut -d":" -f2
	echo ""
# Removed code snippet below that has been replaced by a logical HTTPD configtest
# ZP 20OCT15
#--------------------------------------------------------------------------------
#	echo "!!!!!!!!Warning - Be careful!!!!!!!!"
#	echo "! Do you want me to recycle Apache?!"
#	echo "!!Make sure your syntax checked out!"
#	echo "!       To recycle type YES        !"
#	echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
#	echo ""
#	echo "Apache configuration files test results:"
#	service httpd configtest
#	echo ""
#	select recycleapache in "Yes" "No";do
#	case $recycleapache in
#		Yes )
#			service httpd graceful
#			echo ""
#			echo "Is Apache still running? Survey says:"
#			service httpd status
#
#		break;;
#		No ) echo "Skipped Apache Recycle";echo "";break;;
#	esac
#done
#^^^ is the old code
#---------------------------------------------------------------------------------


#New code for HTTPD configtest and recycle. 
string=$(service httpd configtest 2>&1)
if [[ $string == "Syntax OK" ]]
	then
	service httpd graceful
	echo -e "\e[92mApache Config Files looked good, recycled Apache\e[0m"
	else
		echo -e "\e[91mSomething wasn't quite right with the Apache Config Files!"
		echo "Halting install. Fix the below errors before running this script again"
		echo "Attempting to cleanup since install was skipped"
		echo -e "\e[0m"
                groupdel $websiten
                rm -r /data/www/vhosts/$websiten
                rm /etc/httpd/sites-enabled/$websiten.conf
                service httpd graceful
                echo "Vhostfile for" $websiten" deleted, recycled Apache."
                echo ""
                echo "Is Apache still running:"
                service httpd status
                echo ""
fi
# Lets install Wordpress now

#echo ""
#echo "Do you wish to install Wordpress?"
#select wpyn in "Yes" "No"; do
#    case $wpyn in
#        Yes )
#	clear 
# Downloads latest version of WP and copies pre-set plugins Interactive requires
	echo -e "\e[90m "
	wget -P /tmp http://wordpress.org/latest.tar.gz
	#Unzip
	tar -zxf /tmp/latest.tar.gz -C /data/www/vhosts/$websiten
	#Copy Plugins
	unzip -q /data/WPPlugins/latestbp.zip -d /data/www/vhosts/$websiten/wordpress/wp-content/plugins/
	unzip -q /data/WPPlugins/wp-smtp.1.1.9.zip -d /data/www/vhosts/$websiten/wordpress/wp-content/plugins
	unzip -q /data/WPPlugins/minimum-password-strength.1.1.2.zip -d /data/www/vhosts/$websiten/wordpress/wp-content/plugins
	unzip -q /data/WPPlugins/captcha.4.1.5.zip -d /data/www/vhosts/$websiten/wordpress/wp-content/plugins
	unzip -q /data/WPPlugins/ninjafirewall.1.7.zip -d /data/www/vhosts/$websiten/wordpress/wp-content/plugins
	unzip -q /data/WPPlugins/automatic-updater.1.0.2.zip -d /data/www/vhosts/$websiten/wordpress/wp-content/plugins
	unzip -q /data/WPPlugins/wpclef.2.3.1.zip -d /data/www/vhosts/$websiten/wordpress/wp-content/plugins
	unzip -q /data/WPPlugins/all-in-one-wp-security-and-firewall.zip -d /data/www/vhosts/$websiten/wordpress/wp-content/plugins
	#unzip /data/WPPlugins/import-users-from-csv.1.0.0.zip -d /data/www/vhosts/$websiten/wordpress/wp-content/plugins
        #unzip /data/WPPlugins/wordfence.5.3.2.zip -d /data/www/vhosts/$websiten/wordpress/wp-content/plugins
# Clean up install location paths
	mv /data/www/vhosts/$websiten/wordpress/* /data/www/vhosts/$websiten/webroot
	rm -rf /data/www/vhosts/$websiten/wordpress

# Resets permissions and ownership of files/folders since Tar extracts as TapeID at times
	chmod 0775 -R /data/www/vhosts/$websiten
	chmod 0775 -R /data/www/vhosts/$websiten/webroot
	chown -R apache:$websiten /data/www/vhosts/$websiten
#	setfacl -Rm g:apache:r-x /data/www/vhosts/$websiten
	chmod g+s -R /data/www/vhosts/$websiten/webroot
	chmod g+s -R /data/www/vhosts/$websiten
# Create DB
	echo -e "\e[0m"
	echo -e "\e[4mChoose which envrionment or MySQL server we are setting the database up on:"
	echo -e "\e[0m1) NEW PROD - NA1DPGDBL1397V"
	echo "2) Old Prod - NA1PPGDBL676V"
#	echo "3) DEV - NA1DPGDBL675v"
	echo ""
	read dbenv
        	if [ $dbenv = 1 ] ; then
                	echo "New Prod"
	                dbserver=$newproddbserver
	        break
	fi
        	if [ $dbenv = 2 ] ;then
	                echo "Prod"
                	dbserver=$proddbserver
	        break
	fi
#		if [ $dbenv = 3 ] ;then
#			echo "Dev - NA1DPGDBL675v"
#			dbserver=$devdbserver
#		break
#	fi

#       Create Strong WP
# All rights reserved Copyright by Jian Yang
# ----------------------------------------------------------------------------
#

SET_UPPER='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
SET_LOWER='abcdefghijklmnopqrstuvwxyz'
SET_PUNC='~#!()_+-=:,.'
SET_DIGIT='0123456789'
ALL_SET="${SET_UPPER}${SET_LOWER}${SET_PUNC}${SET_DIGIT}"

LENGTH=15
COUNT=1

get_char_from_set() {
s=$1
l=${#s}
r=`expr $RANDOM % $l`
echo ${s:$r:1}
}

gen_passwd() {
char[0]=`get_char_from_set $SET_UPPER`
char[1]=`get_char_from_set $SET_LOWER`
char[2]=`get_char_from_set $SET_PUNC`
char[3]=`get_char_from_set $SET_DIGIT`
char[4]=`get_char_from_set $ALL_SET`
char[5]=`get_char_from_set $ALL_SET`
char[6]=`get_char_from_set $ALL_SET`
char[7]=`get_char_from_set $ALL_SET`
char[8]=`get_char_from_set $ALL_SET`
char[9]=`get_char_from_set $ALL_SET`
char[10]=`get_char_from_set $ALL_SET`
char[11]=`get_char_from_set $ALL_SET`
char[12]=`get_char_from_set $ALL_SET`
char[13]=`get_char_from_set $ALL_SET`
char[14]=`get_char_from_set $ALL_SET`
char[15]=`get_char_from_set $ALL_SET`

for ((i=0;i<$LENGTH;i++)); do
	j=`expr $RANDOM % $LENGTH`
	x=${char[$i]}; char[$i]=${char[$j]};char[$j]=$x
done

echo "${char[@]}" | tr -d ' '
}

pw=$(gen_passwd)

# End Strong PW creation script ^^^^^^
# Sanatize DB info
# Remove .com if exists
dbname=${websiten%.com}
#Add SID infront of id
dbuserid=sid_${websiten%.com}
#Clean ID Characters
cleanID=${dbuserid//[-+=.,]/_}
dbuserid=$cleanID
#Clean Database Name
cleanDB=${dbname//[-+=.,]/_}
dbname=$cleanDB
# Shorten Service account ID to 14 characters
if [ ${#dbuserid} -gt 15 ]
            then
                dbuserid=$(echo $dbuserid | cut -c1-14)
            else
                dbuserid=$dbuserid
fi
# Shorten DB name
if [ ${#dbname} -gt 15 ]
            then
                dbname=$(echo $dbname | cut -c1-18)
            else
                dbname=$dbname
fi
echo "Creating DB"
# Specifies MySQL script name
sqlfile=${websiten%.com}.sql
# Create MySQL script
	echo "CREATE DATABASE $dbname;" > /tmp/$sqlfile
	echo "GRANT ALL PRIVILEGES ON "$dbname.*" TO \"$dbuserid\"@\"%\" IDENTIFIED BY \""$pw"\";" >> /tmp/$sqlfile
	echo "FLUSH PRIVILEGES;" >> /tmp/$sqlfile
	echo "EXIT" >> /tmp/$sqlfile
# Executes the DB creation script
 if [ $dbenv = 1 ]
	then
		mysql -u inact -pH0m3r01 -h $dbserver --port=1620 < /tmp/$sqlfile
	else
		mysql -u inact -pH0m3r01 -h $dbserver < /tmp/$sqlfile
fi

# Creates the WP-Config.php file
cat /data/www/vhosts/$websiten/webroot/wp-config-sample.php | sed -e "s/database_name_here/$dbname/" | sed -e "s/username_here/$dbuserid/" | sed -e "s/password_here/$pw/" | sed -e "s/localhost/$dbserver/" >> /data/www/vhosts/$websiten/webroot/wp-config.php

# Need to Pown the file back to Apache as it is owned by root after creation
chown apache:$websiten /data/www/vhosts/$websiten/webroot/wp-config.php

# Lets clean up everything from install
	# Remove .SQL script file
	rm /tmp/$sqlfile
	# Remove WP-config-sample.php and other files
		rm /data/www/vhosts/$websiten/webroot/wp-config-sample.php
		rm /data/www/vhosts/$websiten/webroot/license.txt
		rm /data/www/vhosts/$websiten/webroot/readme.html
	#cleanup WP download
		rm /tmp/latest.tar.gz
	#Remove Akismet - Not really used and subject to hacking
		rm -r /data/www/vhosts/$websiten/webroot/wp-content/plugins/akismet
	# Remove old themes 2013 and 2012
		rm -r /data/www/vhosts/$websiten/webroot/wp-content/themes/twentytwelve/
		rm -r /data/www/vhosts/$websiten/webroot/wp-content/themes/twentythirteen/
		clear
                echo $websiten "should be all setup and read to go!"
		echo ""
                echo -e "Goto \e[4m"$websiten"/wp-admin \e[0mfor the rest of the setup."
		echo ""
	        echo -e "\e[0mRemember to add new or existing users to the $websiten group."
	        echo "Example: useradd -a -G $websiten -p PASSWORD"
	        echo "Be sure to change new user shells for FTP login: for /sbin/nologin"
        	echo ""
                echo ""
		echo -e "\e[4mIs Apache still running:\e[0m"
		service httpd status
		echo ""
                echo "Have a great day" $USER"!"
                echo ""
                echo -e "\e[0m"

#	break;;
	
#	No )
#		clear
#		echo "I am skipping all Wordpress setup routines"
#		echo ""
#                echo "Attempting to cleanup since install was skipped"
#                groupdel $websiten
#                rm -r /data/www/vhosts/$websiten
#                rm /etc/httpd/sites-enabled/$websiten.conf
#                cleanupstring=$(service httpd configtest 2>&1)
#                        if [[ $cleanupstring == "Syntax OK" ]]
#                        then
#                                service httpd graceful
#                                echo "Vhostfile for" $websiten" deleted, recycled Apache."
#                                echo ""
#                                echo "Is Apache still running:"
#                                service httpd status
#                                echo ""
#                                echo "Thanks for using me and have a great day" $USER
#                        else
#                                echo "Something wasn't quite right with the Apache Config Files when I tried to clean up"
#                                echo "Fix the below errors before restarting Apache"
#                                echo "Also make sure /etc/httpd/sites-enabled/"$websiten".conf is deleted"
#                                echo "Apache's current status is:"
#                                serive httpd configtest
#                                echo ""
#                                echo "Thanks for using me and have a great day" $USER
#                        fi


#	break;;
#	esac
#done


